{"name":"Justin Bettencourt","isTest":false,"questions":[{"number":1,"description":"What is your favourite npm module?","answer":"My favourite npm module would be Vue. It allows for a really strong base when it comes to developing web applications and assists with some tedious Javascript functionality with just a few lines of code.\n\nNot only does it work with Node for larger more complex projects, but it can also be used without being installed through node for smaller projects."},{"number":2,"description":"If you used a framework on your Web Server, what framework did you use and why?","answer":"Having never touched a Web Server before, I wasn't sure about the differences that each Web Server framework would have. \n\nI decided to go with Express.js. After reading up on both Express.js and Koa, \nit felt like Express.js would be best due to it leveraging more of the node \nframework while Koa seemed to have a few features that allowed it to stand \nalone from Node."},{"number":3,"description":"If you used a framework on your frontned, what framework did you use and why?","answer":"I used Vue.js as my frontend frame work. Having used it in the past for small projects allowed me to build it quickly and efficiently. \n\nAfter reviewing some of the existing Zomaron projects, I noticed that the framework Vuetify was used. This allowed me to mock up the sample given easily as it uses a lot of the Google material design language."},{"number":4,"description":"What testing framework(s) do you use?","answer":"I didn't use many testing frameworks as I'm not familiar with any, however, I did use some tools to assist with the Web Server (Nodemon) and relied on console logs and the Chrome Developer tools to check the majority of my work from frontend, seeing if GETs and POSTs are working correctly and any errors.\n\nI also used Postman to do some POST checks to the Zomaron API. It allowed me to check what responses I would get if I were to try POSTing my data to the API."}]}